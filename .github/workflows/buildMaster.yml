name: .NET Core
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ] 
    
jobs:
        build-and-deploy:
            runs-on: ubuntu-latest
            steps:
            - uses: actions/checkout@v3
            - name: Setup .NET
              uses: actions/setup-dotnet@v2        
              with:
                dotnet-version: 5.0.x
            - name: Restore dependencies
              run: dotnet restore

            # checkout the repo
            - name: 'Checkout GitHub Action'
              uses: actions/checkout@main

            - name: 'Login via Azure CLI'
              uses: azure/login@v1
              with:
               creds: ${{ secrets.AZURE_CREDENTIALS }}
              
            - name: 'Login via Azure CLI azure docker'
              uses: azure/docker-login@v1
              with:
               login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
               username: ${{ secrets.REGISTRY_USERNAME }}
               password: ${{ secrets.REGISTRY_PASSWORD }}
            - run: docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:latest
            - name: 'Vulnerability scan container image with Trivy'
              uses: aquasecurity/trivy-action@master
              with:
               image-ref: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:latest
               format: 'sarif'
               output: 'trivy-results.sarif'
               severity: 'CRITICAL,HIGH'

            - name: 'Upload Trivy scan results to GitHub Security tab'
              uses: github/codeql-action/upload-sarif@v2
              with:
               sarif_file: 'trivy-results.sarif'

            - name: 'Push container image to ACR'
              uses: azure/docker-login@v1
              with:
               login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
               username: ${{ secrets.REGISTRY_USERNAME }}
               password: ${{ secrets.REGISTRY_PASSWORD }}
            - run: docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:latest
            - name: 'Deploy to Azure Container Instances'
              uses: 'azure/aci-deploy@v1'
              with:
                resource-group: ${{ secrets.RESOURCE_GROUP }}
                dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
                image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:latest
                registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
                registry-username: ${{ secrets.REGISTRY_USERNAME }}
                registry-password: ${{ secrets.REGISTRY_PASSWORD }}
                name: aci-microserviciovuelo-new
                location: 'west us 3'
